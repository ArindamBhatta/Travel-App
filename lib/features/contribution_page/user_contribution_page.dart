import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:travel_app/features/contribution_page/contribution_card.dart';
import 'package:travel_app/features/home_page/interface/widgets/app_bar_Content.dart';
import 'details_form.dart';

class UserContributionPage extends StatefulWidget {
  @override
  State<UserContributionPage> createState() => _UserContributionPageState();
}

class _UserContributionPageState extends State<UserContributionPage> {
  //* properties
  final GlobalKey<FormState> formKey = GlobalKey<FormState>();
  String? location;
  String? state;
  String? country;
  String? imageUrl;

  //* Method to handle form submission
  void _showLoadingDialog() {
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (BuildContext context) {
        return Dialog(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12),
          ),
          child: Padding(
            padding: const EdgeInsets.all(20.0),
            child: Column(
              mainAxisSize:
                  MainAxisSize.min, // Ensures it doesn't take full screen
              children: [
                CircularProgressIndicator(),
                SizedBox(height: 20),
                Text(
                  'Submission in progress. Please wait...',
                  textAlign: TextAlign.center,
                  style: TextStyle(fontSize: 16),
                ),
              ],
            ),
          ),
        );
      },
    );
  }

  void submitForm() async {
    if (formKey.currentState!.validate()) {
      formKey.currentState!.save();
      _showLoadingDialog(); //* Show the loading dialog

      try {
        //* Upload data to Firestore, when we needs to generate unique id by our self
        // await FirebaseFirestore.instance
        //     .collection('destinations')
        //     .doc('randomId')
        //     .set(
        //   {
        //     'location': location,
        //     'state': state,
        //     'country': country,
        //     'image': imageUrl,
        //     'timestamp': FieldValue.serverTimestamp(),
        //   },
        // );

        //* Upload data to firestore, where unique id is generated by firestore
        await FirebaseFirestore.instance.collection('destinations').doc().set(
          {
            'location': location,
            'state': state,
            'country': country,
            'image': imageUrl,
            'timestamp': FieldValue.serverTimestamp(),
          },
        );

        Navigator.of(context).pop(); //* Close the loading dialog
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(
              'Form submitted successfully!',
            ),
          ),
        );
        formKey.currentState!.reset();
      } catch (error) {
        print('error is coming from firebase $error');
        Navigator.of(context).pop(); //* Close the loading dialog
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(
              'Failed to submit form: $error',
            ),
          ),
        );
      }
    }
  }

  void addPlaceInfoOnTap() {
    showModalBottomSheet(
      context: context,
      isScrollControlled: true, //* Allows the modal to take more space
      builder: (modalBottomSheetContext) {
        return DraggableScrollableSheet(
          expand: false,
          initialChildSize: 0.60,
          maxChildSize: 0.60,
          minChildSize: 0.60,
          builder: (context, scrollController) {
            return DetailsForm(
              globalKey: formKey,
              onSaved: (String? newLocation, String? newState,
                  String? newCountry, String? newImageUrl) {
                setState(() {
                  location = newLocation;
                  state = newState;
                  country = newCountry;
                  imageUrl = newImageUrl;
                });
                submitForm();
              },
            );
          },
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: SafeArea(
        child: Column(
          children: [
            AppBarContent(
              headingText: 'Upload Your View',
            ),
            Expanded(
              child: StreamBuilder<QuerySnapshot>(
                stream: FirebaseFirestore
                    .instance //* return an instance a default firebase app
                    .collection('destinations')
                    .orderBy(
                      'timestamp',
                      descending: true,
                    )
                    .snapshots(), //* notify the result
                builder: (context, snapshot) {
                  if (snapshot.connectionState == ConnectionState.waiting) {
                    return Center(
                      child: CircularProgressIndicator(),
                    );
                  }
                  if (snapshot.data!.docs.isEmpty) {
                    return Center(
                      child: Text(
                        'No destinations found.',
                      ),
                    );
                  }
                  if (snapshot.hasError) {
                    return Center(
                      child: Text('An error occurred: ${snapshot.error}'),
                    );
                  }
                  final destination = snapshot.data!.docs;

                  return ListView.builder(
                    itemCount: destination.length,
                    itemBuilder: (context, index) {
                      final data =
                          destination[index].data() as Map<String, dynamic>;
                      print('whole data is -> -> -> ${data}');
                      return SpecificUserDetailsFromCommunity(
                          imageUri: data['image'],
                          country: data['country'],
                          location: data['location'],
                          state: data['state']);
                    },
                  );
                },
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        backgroundColor: Colors.blue[800],
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(30.0),
        ),
        elevation: 20.0,
        onPressed: addPlaceInfoOnTap,
        child: Icon(
          Icons.add_rounded,
          color: Colors.white,
          size: 30,
        ),
      ),
    );
  }
}
